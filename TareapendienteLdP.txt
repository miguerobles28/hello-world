#include <iostream>
#include <math.h>

using namespace std;

#define ALPHA 1.24

unsigned int var;
char x, y, vx, vy; 
# define pi 3.14159265359 
# define f 10000
# define f1 5000000000
# define mu  0.00000125664
# define epsi  0.00000000000088542
void calcParabolico(void);
void print_results(void);
void otros_calculos(void);

int main()
{
    unsigned short int des = -5;
    int lib_func1();
    var = 100;
    cout<<"hola\n";
    var += des;

    //Calculando los parametros en la Tierra con g = 9.8 m/s*s
    calcParabolico();
    print_results();

    //Calculando los parametros en la Luna con g = 1.62 m/s*s
    calcParabolico();
    print_results();
    otros_calculos();
    

    return 0;
}

void calcParabolico(void)
{
    const float g = 9.8;
    char vx0, vy0, t, y0, v0;

    vx0 = v0 * cos(ALPHA);
    vy0 = v0 * sin(ALPHA);

    vx = vx0;
    vy = vy0-g*t;

    x = vx*t;
    y = y0+vy0*t-(g*pow(t,2)/2);
}

void print_results(void)
{
    std::cout<<"Los resultados del calculo parabolico son: "<<std::endl;
    std::cout<<"Velocidad en x: "<<vx<<", ";
    std::cout<<"Velocidad en y: "<<vy<<", ";
    std::cout<<"Posicion en x: "<<x<<", ";
    std::cout<<"Posicion en y: "<<y<<std::endl;
}

void otros_calculos(void)
{
    float v, z, rad, x1, dis, x2, z0;
    /* Serie simple (1/[(x^2) + (x+1)]) para x entre 1 y 199*/
    for(int x=1; x<200; x++){
        z=(1/(pow(x,2)+(x+1)));
        cout<<z<<"\n";
    }
        //Agregue aqui la formula

    /* Volumen de la esfera */
      //Agregue aqui la formula
      v=4/3*pi*pow(rad,3);

    /* Raices de la ecuacion (3*x^2) + (5*x) + 8  = 0 */
      //Agregue aqui la formula
      
      
    dis= sqrt((5*5)-(4*3*8));//raiz negativa
    x1=(-5+dis)/(2*5);
    x2=(-5-dis)/(2*5);
      
    cout<<"La primera raiz es: "<<x1<<"\n";  
    cout<<"La primera raiz es: "<<x2<<"\n";

    /* Impedancia tipica de una linea de transmision
     * Z0 = [(R+wL)/(G+wC)]^(1/2)
     * w = frecuencia angular = 2*pi*f, f = 10kHz */
        //Agregue aqui la formula
    float R = 330, L = 0.001,  G = 5, C = 0.000001, w;
    w  = 2*pi*f;    
    z0 = pow((R+w*L)/(G+w*C),1/2);
    cout<<z0<<"\n";
    /* Constante de fase de una fibra optica
     * B = {[((a^2)-(b^2))*c+(b^2)]^(1/2)}*betacero
     * betacero = w*(mu*epsi)^(1/2)
     * w = frecuencia angular = 2*pi*f, f = 5GHz
     * mu = 0.00000125664
     * epsi = 0.00000000000088542  */
     float  w1, a = 10, b = 15, c = 20;
     w1 = 2*pi*f1;
     float betacero = w1*pow(mu*epsi,0.5); 
     cout<<"betacero es: "<<betacero<<"\n";
     float B = (pow((pow(a,2)-pow(b,2))*c+pow(b,2),1/2))*betacero;
     cout<<"La constante de fase es: "<<B<<"\n";
     }